{"name": "test_try_accept_order_without_order_id_returns_correct_status_code", "status": "failed", "statusDetails": {"message": "AssertionError: assert 404 == 400\n +  where 404 = <Response [404]>.status_code\n +  and   400 = <class 'DATA.Codes'>.BAD_REQUEST\n +    where <class 'DATA.Codes'> = DATA.Codes", "trace": "self = <tests.TestAcceptOrder object at 0x000001EFA106DCA0>, static_payloads = {'firstName': 'jykfwrclwd', 'login': 'zyvttyjgei', 'password': 'yrcwglhjqh'}\n\n    def test_try_accept_order_without_order_id_returns_correct_status_code(self,\n                                                                           static_payloads):  # Ошибка АПИ Яндекса. Обратитесь к куратору Исканов Камил.\n        created_courier = requests.post(f'{DATA.Url.MAIN_URL}{DATA.Api.COURIER_LOGIN}',\n                                        data=static_payloads)\n        courier_id = created_courier.json()['id']\n        response = requests.put(\n            f'{DATA.Url.MAIN_URL}{DATA.Api.ORDER_CREATION}{DATA.Api.ACCEPT_ORDER}{DATA.Api.COURIER_ID_PATH}{courier_id}')\n        print(response.json())\n>       assert response.status_code == DATA.Codes.BAD_REQUEST\nE       AssertionError: assert 404 == 400\nE        +  where 404 = <Response [404]>.status_code\nE        +  and   400 = <class 'DATA.Codes'>.BAD_REQUEST\nE        +    where <class 'DATA.Codes'> = DATA.Codes\n\ntests.py:187: AssertionError"}, "attachments": [{"name": "stdout", "source": "e97ef931-da2c-4e5d-84fb-82bf8f7a5d3d-attachment.txt", "type": "text/plain"}], "start": 1724779332411, "stop": 1724779332509, "uuid": "c63c9c46-0441-45db-aae9-68dafcbc0d4a", "historyId": "b61a31960586ad15cade9142ef2fbaa8", "testCaseId": "b61a31960586ad15cade9142ef2fbaa8", "fullName": "tests.TestAcceptOrder#test_try_accept_order_without_order_id_returns_correct_status_code", "labels": [{"name": "suite", "value": "tests"}, {"name": "subSuite", "value": "TestAcceptOrder"}, {"name": "host", "value": "FanatovPC"}, {"name": "thread", "value": "27952-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests"}]}